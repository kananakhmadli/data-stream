/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.company.messaging;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Event extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7659800051325180316L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Event\",\"namespace\":\"com.company.messaging.events\",\"fields\":[{\"name\":\"op_type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ID\",\"type\":[\"long\"],\"default\":-1},{\"name\":\"ID_isMissing\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"AGGREGATE_TYPE\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"AGGREGATE_TYPE_isMissing\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"AGGREGATE_ID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"AGGREGATE_ID_isMissing\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"TYPE\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"TYPE_isMissing\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"PAYLOAD\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"PAYLOAD_isMissing\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Event> ENCODER =
      new BinaryMessageEncoder<Event>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Event> DECODER =
      new BinaryMessageDecoder<Event>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Event> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Event> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Event> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Event>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Event to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Event from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Event instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Event fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String op_type;
  private java.lang.Object ID;
  private java.lang.Boolean ID_isMissing;
  private java.lang.String AGGREGATE_TYPE;
  private java.lang.Boolean AGGREGATE_TYPE_isMissing;
  private java.lang.String AGGREGATE_ID;
  private java.lang.Boolean AGGREGATE_ID_isMissing;
  private java.lang.String TYPE;
  private java.lang.Boolean TYPE_isMissing;
  private java.lang.String PAYLOAD;
  private java.lang.Boolean PAYLOAD_isMissing;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Event() {}

  /**
   * All-args constructor.
   * @param op_type The new value for op_type
   * @param ID The new value for ID
   * @param ID_isMissing The new value for ID_isMissing
   * @param AGGREGATE_TYPE The new value for AGGREGATE_TYPE
   * @param AGGREGATE_TYPE_isMissing The new value for AGGREGATE_TYPE_isMissing
   * @param AGGREGATE_ID The new value for AGGREGATE_ID
   * @param AGGREGATE_ID_isMissing The new value for AGGREGATE_ID_isMissing
   * @param TYPE The new value for TYPE
   * @param TYPE_isMissing The new value for TYPE_isMissing
   * @param PAYLOAD The new value for PAYLOAD
   * @param PAYLOAD_isMissing The new value for PAYLOAD_isMissing
   */
  public Event(java.lang.String op_type, java.lang.Object ID, java.lang.Boolean ID_isMissing, java.lang.String AGGREGATE_TYPE, java.lang.Boolean AGGREGATE_TYPE_isMissing, java.lang.String AGGREGATE_ID, java.lang.Boolean AGGREGATE_ID_isMissing, java.lang.String TYPE, java.lang.Boolean TYPE_isMissing, java.lang.String PAYLOAD, java.lang.Boolean PAYLOAD_isMissing) {
    this.op_type = op_type;
    this.ID = ID;
    this.ID_isMissing = ID_isMissing;
    this.AGGREGATE_TYPE = AGGREGATE_TYPE;
    this.AGGREGATE_TYPE_isMissing = AGGREGATE_TYPE_isMissing;
    this.AGGREGATE_ID = AGGREGATE_ID;
    this.AGGREGATE_ID_isMissing = AGGREGATE_ID_isMissing;
    this.TYPE = TYPE;
    this.TYPE_isMissing = TYPE_isMissing;
    this.PAYLOAD = PAYLOAD;
    this.PAYLOAD_isMissing = PAYLOAD_isMissing;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return op_type;
    case 1: return ID;
    case 2: return ID_isMissing;
    case 3: return AGGREGATE_TYPE;
    case 4: return AGGREGATE_TYPE_isMissing;
    case 5: return AGGREGATE_ID;
    case 6: return AGGREGATE_ID_isMissing;
    case 7: return TYPE;
    case 8: return TYPE_isMissing;
    case 9: return PAYLOAD;
    case 10: return PAYLOAD_isMissing;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: op_type = value$ != null ? value$.toString() : null; break;
    case 1: ID = value$; break;
    case 2: ID_isMissing = (java.lang.Boolean)value$; break;
    case 3: AGGREGATE_TYPE = value$ != null ? value$.toString() : null; break;
    case 4: AGGREGATE_TYPE_isMissing = (java.lang.Boolean)value$; break;
    case 5: AGGREGATE_ID = value$ != null ? value$.toString() : null; break;
    case 6: AGGREGATE_ID_isMissing = (java.lang.Boolean)value$; break;
    case 7: TYPE = value$ != null ? value$.toString() : null; break;
    case 8: TYPE_isMissing = (java.lang.Boolean)value$; break;
    case 9: PAYLOAD = value$ != null ? value$.toString() : null; break;
    case 10: PAYLOAD_isMissing = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'op_type' field.
   * @return The value of the 'op_type' field.
   */
  public java.lang.String getOpType() {
    return op_type;
  }


  /**
   * Sets the value of the 'op_type' field.
   * @param value the value to set.
   */
  public void setOpType(java.lang.String value) {
    this.op_type = value;
  }

  /**
   * Gets the value of the 'ID' field.
   * @return The value of the 'ID' field.
   */
  public java.lang.Object getID() {
    return ID;
  }


  /**
   * Sets the value of the 'ID' field.
   * @param value the value to set.
   */
  public void setID(java.lang.Object value) {
    this.ID = value;
  }

  /**
   * Gets the value of the 'ID_isMissing' field.
   * @return The value of the 'ID_isMissing' field.
   */
  public java.lang.Boolean getIDIsMissing() {
    return ID_isMissing;
  }


  /**
   * Sets the value of the 'ID_isMissing' field.
   * @param value the value to set.
   */
  public void setIDIsMissing(java.lang.Boolean value) {
    this.ID_isMissing = value;
  }

  /**
   * Gets the value of the 'AGGREGATE_TYPE' field.
   * @return The value of the 'AGGREGATE_TYPE' field.
   */
  public java.lang.String getAGGREGATETYPE() {
    return AGGREGATE_TYPE;
  }


  /**
   * Sets the value of the 'AGGREGATE_TYPE' field.
   * @param value the value to set.
   */
  public void setAGGREGATETYPE(java.lang.String value) {
    this.AGGREGATE_TYPE = value;
  }

  /**
   * Gets the value of the 'AGGREGATE_TYPE_isMissing' field.
   * @return The value of the 'AGGREGATE_TYPE_isMissing' field.
   */
  public java.lang.Boolean getAGGREGATETYPEIsMissing() {
    return AGGREGATE_TYPE_isMissing;
  }


  /**
   * Sets the value of the 'AGGREGATE_TYPE_isMissing' field.
   * @param value the value to set.
   */
  public void setAGGREGATETYPEIsMissing(java.lang.Boolean value) {
    this.AGGREGATE_TYPE_isMissing = value;
  }

  /**
   * Gets the value of the 'AGGREGATE_ID' field.
   * @return The value of the 'AGGREGATE_ID' field.
   */
  public java.lang.String getAGGREGATEID() {
    return AGGREGATE_ID;
  }


  /**
   * Sets the value of the 'AGGREGATE_ID' field.
   * @param value the value to set.
   */
  public void setAGGREGATEID(java.lang.String value) {
    this.AGGREGATE_ID = value;
  }

  /**
   * Gets the value of the 'AGGREGATE_ID_isMissing' field.
   * @return The value of the 'AGGREGATE_ID_isMissing' field.
   */
  public java.lang.Boolean getAGGREGATEIDIsMissing() {
    return AGGREGATE_ID_isMissing;
  }


  /**
   * Sets the value of the 'AGGREGATE_ID_isMissing' field.
   * @param value the value to set.
   */
  public void setAGGREGATEIDIsMissing(java.lang.Boolean value) {
    this.AGGREGATE_ID_isMissing = value;
  }

  /**
   * Gets the value of the 'TYPE' field.
   * @return The value of the 'TYPE' field.
   */
  public java.lang.String getTYPE() {
    return TYPE;
  }


  /**
   * Sets the value of the 'TYPE' field.
   * @param value the value to set.
   */
  public void setTYPE(java.lang.String value) {
    this.TYPE = value;
  }

  /**
   * Gets the value of the 'TYPE_isMissing' field.
   * @return The value of the 'TYPE_isMissing' field.
   */
  public java.lang.Boolean getTYPEIsMissing() {
    return TYPE_isMissing;
  }


  /**
   * Sets the value of the 'TYPE_isMissing' field.
   * @param value the value to set.
   */
  public void setTYPEIsMissing(java.lang.Boolean value) {
    this.TYPE_isMissing = value;
  }

  /**
   * Gets the value of the 'PAYLOAD' field.
   * @return The value of the 'PAYLOAD' field.
   */
  public java.lang.String getPAYLOAD() {
    return PAYLOAD;
  }


  /**
   * Sets the value of the 'PAYLOAD' field.
   * @param value the value to set.
   */
  public void setPAYLOAD(java.lang.String value) {
    this.PAYLOAD = value;
  }

  /**
   * Gets the value of the 'PAYLOAD_isMissing' field.
   * @return The value of the 'PAYLOAD_isMissing' field.
   */
  public java.lang.Boolean getPAYLOADIsMissing() {
    return PAYLOAD_isMissing;
  }


  /**
   * Sets the value of the 'PAYLOAD_isMissing' field.
   * @param value the value to set.
   */
  public void setPAYLOADIsMissing(java.lang.Boolean value) {
    this.PAYLOAD_isMissing = value;
  }

  /**
   * Creates a new Event RecordBuilder.
   * @return A new Event RecordBuilder
   */
  public static Event.Builder newBuilder() {
    return new Event.Builder();
  }

  /**
   * Creates a new Event RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Event RecordBuilder
   */
  public static Event.Builder newBuilder(Event.Builder other) {
    if (other == null) {
      return new Event.Builder();
    } else {
      return new Event.Builder(other);
    }
  }

  /**
   * Creates a new Event RecordBuilder by copying an existing Event instance.
   * @param other The existing instance to copy.
   * @return A new Event RecordBuilder
   */
  public static Event.Builder newBuilder(Event other) {
    if (other == null) {
      return new Event.Builder();
    } else {
      return new Event.Builder(other);
    }
  }

  /**
   * RecordBuilder for Event instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Event>
    implements org.apache.avro.data.RecordBuilder<Event> {

    private java.lang.String op_type;
    private java.lang.Object ID;
    private java.lang.Boolean ID_isMissing;
    private java.lang.String AGGREGATE_TYPE;
    private java.lang.Boolean AGGREGATE_TYPE_isMissing;
    private java.lang.String AGGREGATE_ID;
    private java.lang.Boolean AGGREGATE_ID_isMissing;
    private java.lang.String TYPE;
    private java.lang.Boolean TYPE_isMissing;
    private java.lang.String PAYLOAD;
    private java.lang.Boolean PAYLOAD_isMissing;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Event.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.op_type)) {
        this.op_type = data().deepCopy(fields()[0].schema(), other.op_type);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.ID)) {
        this.ID = data().deepCopy(fields()[1].schema(), other.ID);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.ID_isMissing)) {
        this.ID_isMissing = data().deepCopy(fields()[2].schema(), other.ID_isMissing);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.AGGREGATE_TYPE)) {
        this.AGGREGATE_TYPE = data().deepCopy(fields()[3].schema(), other.AGGREGATE_TYPE);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.AGGREGATE_TYPE_isMissing)) {
        this.AGGREGATE_TYPE_isMissing = data().deepCopy(fields()[4].schema(), other.AGGREGATE_TYPE_isMissing);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.AGGREGATE_ID)) {
        this.AGGREGATE_ID = data().deepCopy(fields()[5].schema(), other.AGGREGATE_ID);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.AGGREGATE_ID_isMissing)) {
        this.AGGREGATE_ID_isMissing = data().deepCopy(fields()[6].schema(), other.AGGREGATE_ID_isMissing);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.TYPE)) {
        this.TYPE = data().deepCopy(fields()[7].schema(), other.TYPE);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.TYPE_isMissing)) {
        this.TYPE_isMissing = data().deepCopy(fields()[8].schema(), other.TYPE_isMissing);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.PAYLOAD)) {
        this.PAYLOAD = data().deepCopy(fields()[9].schema(), other.PAYLOAD);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.PAYLOAD_isMissing)) {
        this.PAYLOAD_isMissing = data().deepCopy(fields()[10].schema(), other.PAYLOAD_isMissing);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
    }

    /**
     * Creates a Builder by copying an existing Event instance
     * @param other The existing instance to copy.
     */
    private Builder(Event other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.op_type)) {
        this.op_type = data().deepCopy(fields()[0].schema(), other.op_type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ID)) {
        this.ID = data().deepCopy(fields()[1].schema(), other.ID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ID_isMissing)) {
        this.ID_isMissing = data().deepCopy(fields()[2].schema(), other.ID_isMissing);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.AGGREGATE_TYPE)) {
        this.AGGREGATE_TYPE = data().deepCopy(fields()[3].schema(), other.AGGREGATE_TYPE);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.AGGREGATE_TYPE_isMissing)) {
        this.AGGREGATE_TYPE_isMissing = data().deepCopy(fields()[4].schema(), other.AGGREGATE_TYPE_isMissing);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.AGGREGATE_ID)) {
        this.AGGREGATE_ID = data().deepCopy(fields()[5].schema(), other.AGGREGATE_ID);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.AGGREGATE_ID_isMissing)) {
        this.AGGREGATE_ID_isMissing = data().deepCopy(fields()[6].schema(), other.AGGREGATE_ID_isMissing);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.TYPE)) {
        this.TYPE = data().deepCopy(fields()[7].schema(), other.TYPE);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.TYPE_isMissing)) {
        this.TYPE_isMissing = data().deepCopy(fields()[8].schema(), other.TYPE_isMissing);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.PAYLOAD)) {
        this.PAYLOAD = data().deepCopy(fields()[9].schema(), other.PAYLOAD);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.PAYLOAD_isMissing)) {
        this.PAYLOAD_isMissing = data().deepCopy(fields()[10].schema(), other.PAYLOAD_isMissing);
        fieldSetFlags()[10] = true;
      }
    }

    /**
      * Gets the value of the 'op_type' field.
      * @return The value.
      */
    public java.lang.String getOpType() {
      return op_type;
    }


    /**
      * Sets the value of the 'op_type' field.
      * @param value The value of 'op_type'.
      * @return This builder.
      */
    public Event.Builder setOpType(java.lang.String value) {
      validate(fields()[0], value);
      this.op_type = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'op_type' field has been set.
      * @return True if the 'op_type' field has been set, false otherwise.
      */
    public boolean hasOpType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'op_type' field.
      * @return This builder.
      */
    public Event.Builder clearOpType() {
      op_type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'ID' field.
      * @return The value.
      */
    public java.lang.Object getID() {
      return ID;
    }


    /**
      * Sets the value of the 'ID' field.
      * @param value The value of 'ID'.
      * @return This builder.
      */
    public Event.Builder setID(java.lang.Object value) {
      validate(fields()[1], value);
      this.ID = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'ID' field has been set.
      * @return True if the 'ID' field has been set, false otherwise.
      */
    public boolean hasID() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'ID' field.
      * @return This builder.
      */
    public Event.Builder clearID() {
      ID = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'ID_isMissing' field.
      * @return The value.
      */
    public java.lang.Boolean getIDIsMissing() {
      return ID_isMissing;
    }


    /**
      * Sets the value of the 'ID_isMissing' field.
      * @param value The value of 'ID_isMissing'.
      * @return This builder.
      */
    public Event.Builder setIDIsMissing(java.lang.Boolean value) {
      validate(fields()[2], value);
      this.ID_isMissing = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'ID_isMissing' field has been set.
      * @return True if the 'ID_isMissing' field has been set, false otherwise.
      */
    public boolean hasIDIsMissing() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'ID_isMissing' field.
      * @return This builder.
      */
    public Event.Builder clearIDIsMissing() {
      ID_isMissing = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'AGGREGATE_TYPE' field.
      * @return The value.
      */
    public java.lang.String getAGGREGATETYPE() {
      return AGGREGATE_TYPE;
    }


    /**
      * Sets the value of the 'AGGREGATE_TYPE' field.
      * @param value The value of 'AGGREGATE_TYPE'.
      * @return This builder.
      */
    public Event.Builder setAGGREGATETYPE(java.lang.String value) {
      validate(fields()[3], value);
      this.AGGREGATE_TYPE = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'AGGREGATE_TYPE' field has been set.
      * @return True if the 'AGGREGATE_TYPE' field has been set, false otherwise.
      */
    public boolean hasAGGREGATETYPE() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'AGGREGATE_TYPE' field.
      * @return This builder.
      */
    public Event.Builder clearAGGREGATETYPE() {
      AGGREGATE_TYPE = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'AGGREGATE_TYPE_isMissing' field.
      * @return The value.
      */
    public java.lang.Boolean getAGGREGATETYPEIsMissing() {
      return AGGREGATE_TYPE_isMissing;
    }


    /**
      * Sets the value of the 'AGGREGATE_TYPE_isMissing' field.
      * @param value The value of 'AGGREGATE_TYPE_isMissing'.
      * @return This builder.
      */
    public Event.Builder setAGGREGATETYPEIsMissing(java.lang.Boolean value) {
      validate(fields()[4], value);
      this.AGGREGATE_TYPE_isMissing = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'AGGREGATE_TYPE_isMissing' field has been set.
      * @return True if the 'AGGREGATE_TYPE_isMissing' field has been set, false otherwise.
      */
    public boolean hasAGGREGATETYPEIsMissing() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'AGGREGATE_TYPE_isMissing' field.
      * @return This builder.
      */
    public Event.Builder clearAGGREGATETYPEIsMissing() {
      AGGREGATE_TYPE_isMissing = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'AGGREGATE_ID' field.
      * @return The value.
      */
    public java.lang.String getAGGREGATEID() {
      return AGGREGATE_ID;
    }


    /**
      * Sets the value of the 'AGGREGATE_ID' field.
      * @param value The value of 'AGGREGATE_ID'.
      * @return This builder.
      */
    public Event.Builder setAGGREGATEID(java.lang.String value) {
      validate(fields()[5], value);
      this.AGGREGATE_ID = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'AGGREGATE_ID' field has been set.
      * @return True if the 'AGGREGATE_ID' field has been set, false otherwise.
      */
    public boolean hasAGGREGATEID() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'AGGREGATE_ID' field.
      * @return This builder.
      */
    public Event.Builder clearAGGREGATEID() {
      AGGREGATE_ID = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'AGGREGATE_ID_isMissing' field.
      * @return The value.
      */
    public java.lang.Boolean getAGGREGATEIDIsMissing() {
      return AGGREGATE_ID_isMissing;
    }


    /**
      * Sets the value of the 'AGGREGATE_ID_isMissing' field.
      * @param value The value of 'AGGREGATE_ID_isMissing'.
      * @return This builder.
      */
    public Event.Builder setAGGREGATEIDIsMissing(java.lang.Boolean value) {
      validate(fields()[6], value);
      this.AGGREGATE_ID_isMissing = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'AGGREGATE_ID_isMissing' field has been set.
      * @return True if the 'AGGREGATE_ID_isMissing' field has been set, false otherwise.
      */
    public boolean hasAGGREGATEIDIsMissing() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'AGGREGATE_ID_isMissing' field.
      * @return This builder.
      */
    public Event.Builder clearAGGREGATEIDIsMissing() {
      AGGREGATE_ID_isMissing = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'TYPE' field.
      * @return The value.
      */
    public java.lang.String getTYPE() {
      return TYPE;
    }


    /**
      * Sets the value of the 'TYPE' field.
      * @param value The value of 'TYPE'.
      * @return This builder.
      */
    public Event.Builder setTYPE(java.lang.String value) {
      validate(fields()[7], value);
      this.TYPE = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'TYPE' field has been set.
      * @return True if the 'TYPE' field has been set, false otherwise.
      */
    public boolean hasTYPE() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'TYPE' field.
      * @return This builder.
      */
    public Event.Builder clearTYPE() {
      TYPE = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'TYPE_isMissing' field.
      * @return The value.
      */
    public java.lang.Boolean getTYPEIsMissing() {
      return TYPE_isMissing;
    }


    /**
      * Sets the value of the 'TYPE_isMissing' field.
      * @param value The value of 'TYPE_isMissing'.
      * @return This builder.
      */
    public Event.Builder setTYPEIsMissing(java.lang.Boolean value) {
      validate(fields()[8], value);
      this.TYPE_isMissing = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'TYPE_isMissing' field has been set.
      * @return True if the 'TYPE_isMissing' field has been set, false otherwise.
      */
    public boolean hasTYPEIsMissing() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'TYPE_isMissing' field.
      * @return This builder.
      */
    public Event.Builder clearTYPEIsMissing() {
      TYPE_isMissing = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'PAYLOAD' field.
      * @return The value.
      */
    public java.lang.String getPAYLOAD() {
      return PAYLOAD;
    }


    /**
      * Sets the value of the 'PAYLOAD' field.
      * @param value The value of 'PAYLOAD'.
      * @return This builder.
      */
    public Event.Builder setPAYLOAD(java.lang.String value) {
      validate(fields()[9], value);
      this.PAYLOAD = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'PAYLOAD' field has been set.
      * @return True if the 'PAYLOAD' field has been set, false otherwise.
      */
    public boolean hasPAYLOAD() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'PAYLOAD' field.
      * @return This builder.
      */
    public Event.Builder clearPAYLOAD() {
      PAYLOAD = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'PAYLOAD_isMissing' field.
      * @return The value.
      */
    public java.lang.Boolean getPAYLOADIsMissing() {
      return PAYLOAD_isMissing;
    }


    /**
      * Sets the value of the 'PAYLOAD_isMissing' field.
      * @param value The value of 'PAYLOAD_isMissing'.
      * @return This builder.
      */
    public Event.Builder setPAYLOADIsMissing(java.lang.Boolean value) {
      validate(fields()[10], value);
      this.PAYLOAD_isMissing = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'PAYLOAD_isMissing' field has been set.
      * @return True if the 'PAYLOAD_isMissing' field has been set, false otherwise.
      */
    public boolean hasPAYLOADIsMissing() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'PAYLOAD_isMissing' field.
      * @return This builder.
      */
    public Event.Builder clearPAYLOADIsMissing() {
      PAYLOAD_isMissing = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Event build() {
      try {
        Event record = new Event();
        record.op_type = fieldSetFlags()[0] ? this.op_type : (java.lang.String) defaultValue(fields()[0]);
        record.ID = fieldSetFlags()[1] ? this.ID :  defaultValue(fields()[1]);
        record.ID_isMissing = fieldSetFlags()[2] ? this.ID_isMissing : (java.lang.Boolean) defaultValue(fields()[2]);
        record.AGGREGATE_TYPE = fieldSetFlags()[3] ? this.AGGREGATE_TYPE : (java.lang.String) defaultValue(fields()[3]);
        record.AGGREGATE_TYPE_isMissing = fieldSetFlags()[4] ? this.AGGREGATE_TYPE_isMissing : (java.lang.Boolean) defaultValue(fields()[4]);
        record.AGGREGATE_ID = fieldSetFlags()[5] ? this.AGGREGATE_ID : (java.lang.String) defaultValue(fields()[5]);
        record.AGGREGATE_ID_isMissing = fieldSetFlags()[6] ? this.AGGREGATE_ID_isMissing : (java.lang.Boolean) defaultValue(fields()[6]);
        record.TYPE = fieldSetFlags()[7] ? this.TYPE : (java.lang.String) defaultValue(fields()[7]);
        record.TYPE_isMissing = fieldSetFlags()[8] ? this.TYPE_isMissing : (java.lang.Boolean) defaultValue(fields()[8]);
        record.PAYLOAD = fieldSetFlags()[9] ? this.PAYLOAD : (java.lang.String) defaultValue(fields()[9]);
        record.PAYLOAD_isMissing = fieldSetFlags()[10] ? this.PAYLOAD_isMissing : (java.lang.Boolean) defaultValue(fields()[10]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Event>
    WRITER$ = (org.apache.avro.io.DatumWriter<Event>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Event>
    READER$ = (org.apache.avro.io.DatumReader<Event>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










